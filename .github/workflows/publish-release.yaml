name: Publish Release

on:
  workflow_dispatch:
    inputs:
      vendor_version:
        type: string
        description: "Vendor Version (semver) for the release -- what will be visible."
        default: "1.0.0"
        required: true

env:
  INPUT_VENDOR_VERSION: ${{ github.event.inputs.vendor_version || '1.0.0' }}

permissions:
  contents: write

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ env.INPUT_VENDOR_VERSION }}
      prerelease: ${{ steps.versioning.outputs.is-prerelease }}
    steps:
      - uses: actions/checkout@v4
      - name: Determine release version
        id: versioning
        uses: Fresa/trunk-based-release-versioning@v0

      - name: Convert commit logs to JSON
        id: convert-commit-logs
        uses: mikefarah/yq@master
        with:
          cmd: yq ea -o=json 'select(. != null) | [.]' "$(echo "${{ steps.versioning.outputs.commit-logs-path }}" | sed "s|^${{ github.workspace }}/||")" | tee commit_logs.json

      - name: Generate release notes
        id: release_notes
        uses: Fresa/release-notes-generator@v2
        with:
          version: ${{ env.INPUT_VENDOR_VERSION }}
          last_release_ref: ${{ steps.versioning.outputs.last-release-ref }}
          release_ref: ${{ steps.versioning.outputs.release-ref }}
          path_to_commits: ./commit_logs.json

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ env.INPUT_VENDOR_VERSION }}"
          name: "v${{ env.INPUT_VENDOR_VERSION }}"
          body: ${{ steps.release_notes.outputs.release_notes }}
          prerelease: ${{ steps.versioning.outputs.is-prerelease }}
          draft: false

  push:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
          registry-url: https://registry.npmjs.org
          cache: yarn

      - name: Update package.json version
        run: yarn version --no-git-tag-version --new-version ${{ env.INPUT_VENDOR_VERSION }}

      - name: Install dependencies
        run: yarn install

      - name: Build apps
        run: yarn run build

      - name: Publish to NPM
        run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Commit changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "build: bump version to v${{ env.INPUT_VENDOR_VERSION }}"
          git push
